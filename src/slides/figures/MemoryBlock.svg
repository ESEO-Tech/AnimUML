<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="466px" preserveAspectRatio="none" style="width:876px;height:466px;" version="1.1" viewBox="0 0 876 466" width="876px" zoomAndPan="magnify"><defs><filter height="300%" id="f97mghjg31tjm" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><polygon fill="#FEFECE" filter="url(#f97mghjg31tjm)" points="170,8,182,20,170,32,158,20,170,8" style="stroke: #A80036; stroke-width: 1.5;"/><ellipse cx="793" cy="134" fill="#000000" filter="url(#f97mghjg31tjm)" rx="10" ry="10" style="stroke: none; stroke-width: 1.0;"/><rect fill="#FEFECE" filter="url(#f97mghjg31tjm)" height="92.1719" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="220" x="6" y="363"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="6" x2="226" y1="389.2969" y2="389.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="33" x="99.5" y="380.9951">Error</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="200" x="11" y="405.4355">entry/console.log('Error found!')</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="44" x="11" y="419.4043">malloc/</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="24" x="11" y="433.373">set/</text><text fill="#000000" font-family="sans-serif" font-size="12" lengthAdjust="spacingAndGlyphs" textLength="29" x="11" y="447.3418">free/</text><rect fill="#FEFECE" filter="url(#f97mghjg31tjm)" height="50" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="51" x="544.5" y="236"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="544.5" x2="595.5" y1="262.2969" y2="262.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="31" x="554.5" y="253.9951">Free</text><rect fill="#FEFECE" filter="url(#f97mghjg31tjm)" height="50" rx="12.5" ry="12.5" style="stroke: #A80036; stroke-width: 1.5;" width="83" x="364.5" y="109"/><line style="stroke: #A80036; stroke-width: 1.5;" x1="364.5" x2="447.5" y1="135.2969" y2="135.2969"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="63" x="374.5" y="126.9951">Allocated</text><!--link *start to memoryBlock.Free--><path d="M788.515,143.321 C780.14,158.09 760.713,188.932 736,206 C694.169,234.891 635.882,249.105 600.667,255.473 " fill="none" id="*start-memoryBlock.Free" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="595.643,256.356,605.2002,258.735,600.5673,255.4891,603.8132,250.8562,595.643,256.356" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="87" x="755" y="202.0669">/this.size = 0;</text><!--link memoryBlock.Free to memoryBlock.Allocated--><path d="M561.511,235.972 C555.122,220.822 545.044,201.776 531,189 C508.868,168.867 478.068,155.442 452.579,147.014 " fill="none" id="memoryBlock.Free-memoryBlock.Allocated" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="447.556,145.394,454.8949,151.9622,452.3149,146.9279,457.3492,144.348,447.556,145.394" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="181" x="546" y="202.0669">malloc(size)/this.size = size;</text><!--link memoryBlock.Allocated to memoryBlock.Free--><path d="M395.961,159.219 C391.532,174.068 389.262,192.713 399,206 C431.231,249.978 499.395,259.057 539.241,260.404 " fill="none" id="memoryBlock.Allocated-memoryBlock.Free" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="544.431,260.541,535.5393,256.3058,539.4327,260.4095,535.3289,264.303,544.431,260.541" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="122" x="400" y="202.0669">free()/this.size = 0;</text><!--link memoryBlock.Free to memoryBlock.Error--><path d="M544.377,263.079 C452.272,267.217 141.892,283.493 113,316 C102.9849,327.268 100.7583,342.725 101.9401,357.7523 " fill="none" id="memoryBlock.Free-memoryBlock.Error" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="102.4652,362.8256,105.5172,353.4616,101.9503,357.8522,97.5597,354.2853,102.4652,362.8256" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="484" x="114" y="329.0669">set(offset, value)/this.errorMessage = 'use after free (or without allocating)';</text><!--link memoryBlock.Free to memoryBlock.Error--><path d="M593.949,286.251 C605.543,300.93 614.682,319.381 603,333 C556.099,387.6763 360.136,402.8723 231.537,406.8702 " fill="none" id="memoryBlock.Free-memoryBlock.Error" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="226.229,407.0301,235.3449,410.7583,231.2267,406.8801,235.1049,402.7619,226.229,407.0301" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="255" x="609" y="329.0669">free()/this.errorMessage = 'double free';</text><!--link memoryBlock.Allocated to memoryBlock.choice--><path d="M398.595,108.665 C392.57,92.986 382.49,73.457 367,62 C337.836,40.429 226.344,26.874 185.291,22.525 " fill="none" id="memoryBlock.Allocated-memoryBlock.choice" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="180.201,21.995,188.7376,26.9069,185.174,22.5136,189.5673,18.95,180.201,21.995" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="108" x="384" y="75.0669">set(offset, value)</text><!--link memoryBlock.choice to memoryBlock.Allocated--><path d="M166.068,28.337 C160.24,40.335 151.196,64.284 163,79 C187.1,109.043 295.437,123.428 359.03,129.396 " fill="none" id="memoryBlock.choice-memoryBlock.Allocated" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="364.284,129.879,355.6888,125.0704,359.3051,129.4204,354.9551,133.0367,364.284,129.879" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="194" x="164" y="75.0669">[offset &gt;= 0 &amp;&amp; offset &lt; size]</text><!--link memoryBlock.choice to memoryBlock.Error--><path d="M164.987,27.207 C148.338,48.274 94.9265,119.603 77,189 C62.2289,246.182 79.0229,313.197 94.9408,357.892 " fill="none" id="memoryBlock.choice-memoryBlock.Error" style="stroke: #A80036; stroke-width: 1.0;"/><polygon fill="#A80036" points="96.6758,362.6871,97.3751,352.8631,94.9747,357.9854,89.8524,355.5849,96.6758,362.6871" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="306" x="78" y="202.0669">[else]/this.errorMessage = 'out of bounds write';</text><!--
@startuml
		

			
			
						state memoryBlock.choice <<choice>>
						
						memoryBlock.Error : entry/console.log('Error found!')
						
						
						
							memoryBlock.Error : malloc/
							memoryBlock.Error : set/
							memoryBlock.Error : free/
						state "Error" as memoryBlock.Error  {
							
			
			
		
						}
						
						
						
						
						
						state "Free" as memoryBlock.Free  {
							
			
			
		
						}
						
						
						
						
						
						state "Allocated" as memoryBlock.Allocated  {
							
			
			
		
						}
						
			
				[*] - -> memoryBlock.Free : /this.size = 0;
				memoryBlock.Free - -> memoryBlock.Allocated : malloc(size)/this.size = size;
				memoryBlock.Free - -> memoryBlock.Error : set(offset, value)/this.errorMessage = 'use after free (or without allocating)';
				memoryBlock.Free - -> memoryBlock.Error : free()/this.errorMessage = 'double free';
				memoryBlock.Allocated - -> memoryBlock.Free : free()/this.size = 0;
				memoryBlock.Allocated - -> memoryBlock.choice : set(offset, value)
				memoryBlock.choice - -> memoryBlock.Allocated : [offset >= 0 && offset < size]
				memoryBlock.choice - -> memoryBlock.Error : [else]/this.errorMessage = 'out of bounds write';
		
@enduml

PlantUML version 1.2019.03(Sun Mar 10 12:04:44 CET 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_265-8u265-b01-0ubuntu2~16.04-b01
Operating System: Linux
OS Version: 4.4.0-186-generic
Default Encoding: UTF-8
Language: fr
Country: FR
--></g></svg>